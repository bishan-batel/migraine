# Migraine

It's BrainF\*ck (BF) but a bit more usable

Now with hot new features like:

- Functions
- Number and String Litearls
- The Stack (new architecture)

## Work in Progress

- [x] Preprocessor (for macros)
  - [x] Macros
  - [ ] Include statements
- [x] Lexer / Tokenizer
- [ ] Parser / Parsetree generation
- [ ] Intepreter
- [ ] Compiler
  - [ ] Linux x86_64 Architecture
  - [ ] Win x86_64 Architecture
  - [ ] Mac x86_64 Architecture

## Language Features

Here is a comparison of 'Hello World' between BF and Migraine (without any comments):

### Hello World in BF

```brainfuck
++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.
```

### Hello World in Migraine

```brainfuck
@main {
	^11
	"Hello World"
	[.>]
}
```

#### Functions

The first major difference between Migraine and Brainf\*ck is functions
which are defined as `@<name> { <code> }`, the terminology is 'functions' but
it may be more helpful to think about them as subroutines such as in assembly

#### The Stack Tape

In normal BF, the memory you manipulate is typically referred to as "the tape"
which is just a long line of cells with each containing a number\
In Migraine there is still a tape of memory, but migraine gives you the option
create more than just one inside a stack structure, where you can move between
them and perform operations between 2
tapes at a time.

An example of how you can manipulate the stack:
__rofl bob__
__&__
